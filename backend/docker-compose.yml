version: '3'
services:
  backend:
    user: root
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: ./.env
    volumes:
      - static:/app/public
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - redis
      - mysql_db

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: ./.env
    ports:
      - ${WORKER_PORT}:${WORKER_PORT}
    depends_on:
      - redis
      - mysql_db
    command: yarn start:prod-worker

  redis:
    image: redis:latest
    container_name: spin-to-earn-redis
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_NAME=${REDIS_NAME}
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - redis-data:/data

  mysql_db:
    image: mysql:8.0.25
    container_name: mysql_8_0_25
    restart: unless-stopped
    command:
      - --default-authentication-plugin=mysql_native_password
      - --sort_buffer_size=1073741824
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - 3308:${DB_PORT}
    volumes:
      - db-backup:/var/lib/mysql
volumes:
  db-backup:
  static:
  redis-data:
